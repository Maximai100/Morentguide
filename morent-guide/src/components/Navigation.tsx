import React, { useState } from 'react';
import type { Apartment } from '../types';

interface NavigationProps {
  apartment: Apartment;
  className?: string;
}

const Navigation: React.FC<NavigationProps> = ({ apartment, className = '' }) => {
  const [isExpanded, setIsExpanded] = useState(false);

  const openInGoogleMaps = () => {
    const address = `${apartment.base_address}, ${apartment.building_number}`;
    const encodedAddress = encodeURIComponent(address);
    window.open(`https://www.google.com/maps/search/?api=1&query=${encodedAddress}`, '_blank');
  };

  const openInYandexMaps = () => {
    const address = `${apartment.base_address}, ${apartment.building_number}`;
    const encodedAddress = encodeURIComponent(address);
    window.open(`https://yandex.ru/maps/?text=${encodedAddress}`, '_blank');
  };

  const openInAppleMaps = () => {
    const address = `${apartment.base_address}, ${apartment.building_number}`;
    const encodedAddress = encodeURIComponent(address);
    window.open(`https://maps.apple.com/?q=${encodedAddress}`, '_blank');
  };

  const copyAddress = async () => {
    const address = `${apartment.base_address}, –∫–æ—Ä–ø—É—Å ${apartment.building_number}, –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç ${apartment.apartment_number}`;
    try {
      await navigator.clipboard.writeText(address);
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏
      const notification = document.createElement('div');
      notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded-lg z-50';
      notification.textContent = '–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!';
      document.body.appendChild(notification);
      setTimeout(() => document.body.removeChild(notification), 2000);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞:', error);
    }
  };

  const getDirections = () => {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    const userAgent = navigator.userAgent.toLowerCase();
    
    if (/iphone|ipad|ipod/.test(userAgent)) {
      openInAppleMaps();
    } else if (/android/.test(userAgent)) {
      openInGoogleMaps();
    } else {
      // –î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
      setIsExpanded(!isExpanded);
    }
  };

  return (
    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 ${className}`}>
      <h3 className="text-lg font-heading font-semibold mb-4 text-gray-900 dark:text-white">
        üó∫Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è
      </h3>
      
      <div className="space-y-4">
        {/* –ê–¥—Ä–µ—Å */}
        <div className="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
          <h4 className="font-semibold text-gray-900 dark:text-white mb-2">
            –ê–¥—Ä–µ—Å –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤:
          </h4>
          <p className="text-gray-700 dark:text-gray-300">
            {apartment.base_address}
          </p>
          <p className="text-gray-700 dark:text-gray-300">
            –ö–æ—Ä–ø—É—Å {apartment.building_number}, –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç {apartment.apartment_number}
          </p>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <div className="space-y-3">
          <button
            onClick={getDirections}
            className="w-full bg-[#0e2a3b] text-white py-3 px-4 rounded-lg hover:bg-[#0a1f2b] transition-colors flex items-center justify-center space-x-2"
          >
            <span>üöó</span>
            <span>–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç</span>
          </button>

          <button
            onClick={copyAddress}
            className="w-full bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white py-3 px-4 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors flex items-center justify-center space-x-2"
          >
            <span>üìã</span>
            <span>–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å</span>
          </button>
        </div>

        {/* –í—ã–±–æ—Ä –∫–∞—Ä—Ç (–¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞) */}
        {isExpanded && (
          <div className="space-y-2 animate-fade-in">
            <button
              onClick={openInGoogleMaps}
              className="w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-white py-2 px-4 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors flex items-center justify-center space-x-2"
            >
              <span>üó∫Ô∏è</span>
              <span>Google Maps</span>
            </button>
            
            <button
              onClick={openInYandexMaps}
              className="w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-white py-2 px-4 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors flex items-center justify-center space-x-2"
            >
              <span>üó∫Ô∏è</span>
              <span>–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã</span>
            </button>
          </div>
        )}

        {/* –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4">
          <h4 className="font-semibold text-blue-900 dark:text-blue-100 mb-2">
            üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:
          </h4>
          <ul className="text-sm text-blue-800 dark:text-blue-200 space-y-1">
            <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å –≤ –∑–∞–∫–ª–∞–¥–∫–∞—Ö</li>
            <li>‚Ä¢ –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏</li>
            <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default Navigation;

import React, { useState, useEffect } from 'react';
import type { Booking, Apartment } from '../types';
import { apartmentApi, bookingApi } from '../utils/api';
import { generateSlug } from '../utils/helpers';

interface BookingFormProps {
  booking?: Booking;
  onSave: (booking: Omit<Booking, 'id'> | Booking) => Promise<void>;
  onCancel: () => void;
  isLoading?: boolean;
}

const BookingForm: React.FC<BookingFormProps> = ({
  booking,
  onSave,
  onCancel,
  isLoading = false
}) => {
  const [apartments, setApartments] = useState<Apartment[]>([]);
  const [selectedApartment, setSelectedApartment] = useState<Apartment | null>(null);
  const [customLockCode, setCustomLockCode] = useState<string>('');
  const [formData, setFormData] = useState<Omit<Booking, 'id'>>({
    guest_name: booking?.guest_name || '',
    checkin_date: booking?.checkin_date || '',
    checkout_date: booking?.checkout_date || '',
    apartment_id: booking?.apartment_id || '',
    slug: booking?.slug || generateSlug()
  });
  const [isBookingCreated, setIsBookingCreated] = useState<boolean>(!!booking);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–≤
  useEffect(() => {
    const loadApartments = async () => {
      try {
        const data = await apartmentApi.getAll();
        setApartments(data);
        
        // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–∞—Ö–æ–¥–∏–º —Å–≤—è–∑–∞–Ω–Ω—ã–π –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
        if (booking?.apartment_id) {
          const apartment = data.find(apt => apt.id === booking.apartment_id);
          setSelectedApartment(apartment || null);
        }
      } catch (error) {
        console.error('Error loading apartments:', error);
      }
    };

    loadApartments();
  }, [booking?.apartment_id]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    console.log('Saving booking data:', formData);
    console.log('Is booking created:', isBookingCreated);
    
    // –ï—Å–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–∂–µ —Å–æ–∑–¥–∞–Ω–æ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ slug, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
    if (isBookingCreated && !booking) {
      // –ù–∞–π–¥–µ–º —Å–æ–∑–¥–∞–Ω–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ slug –∏ –æ–±–Ω–æ–≤–∏–º –µ–≥–æ
      try {
        const bookings = await bookingApi.getAll();
        const existingBooking = bookings.find(b => b.slug === formData.slug);
        if (existingBooking) {
          await bookingApi.update(existingBooking.id, formData);
          alert('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
        }
      } catch (error) {
        console.error('Error updating booking:', error);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
      }
    } else {
      // –û–±—ã—á–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
      const dataToSave = booking 
        ? { ...formData, id: booking.id }
        : formData;
      
      await onSave(dataToSave);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
    
    // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
    if (name === 'apartment_id') {
      const apartment = apartments.find(apt => apt.id === value);
      setSelectedApartment(apartment || null);
    }
  };

  const generateNewSlug = async () => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      if (!formData.guest_name || !formData.apartment_id || !formData.checkin_date || !formData.checkout_date) {
        alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Å—Å—ã–ª–∫–∏');
        return;
      }

      const newSlug = generateSlug();
      setFormData(prev => ({ ...prev, slug: newSlug }));

      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      if (!booking) {
        try {
          console.log('Creating booking with slug:', newSlug);
                     const createdBooking = await bookingApi.create({
             guest_name: formData.guest_name,
             apartment_id: formData.apartment_id,
             checkin_date: formData.checkin_date,
             checkout_date: formData.checkout_date,
             slug: newSlug
           });
           console.log('Booking created successfully:', createdBooking);
           setIsBookingCreated(true);
           alert('–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ! –°—Å—ã–ª–∫–∞ —Ç–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–∞.');
        } catch (error) {
          console.error('Error creating booking:', error);
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
      } else {
        // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ, –æ–±–Ω–æ–≤–ª—è–µ–º slug
        try {
          await bookingApi.update(booking.id, { slug: newSlug });
          alert('–°—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!');
        } catch (error) {
          console.error('Error updating slug:', error);
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏.');
        }
      }
    } catch (error) {
      console.error('Error generating slug:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏');
    }
  };

  const copyToClipboard = async (text: string) => {
    try {
      await navigator.clipboard.writeText(text);
      alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    } catch (error) {
      console.error('Error copying to clipboard:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏');
    }
  };

  const getGuestLink = () => {
    if (!formData.slug) return '';
    return `${window.location.origin}/morent-guide/booking/${formData.slug}`;
  };

  const generateWelcomeMessage = () => {
    if (!formData.guest_name || !formData.slug) return '';
    
    const guestLink = getGuestLink();
    const lockCode = customLockCode || selectedApartment?.code_lock || '–Ω–µ —É–∫–∞–∑–∞–Ω';
    
    return `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${formData.guest_name} !

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ MORENT üå¥

–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞—Å–µ–ª–µ–Ω–∏—é: ${guestLink}

–ö–æ–¥ –∑–∞–º–∫–∞: ${lockCode}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ MORENT`;
  };

  const copyMessage = async () => {
    const message = generateWelcomeMessage();
    if (message) {
      await copyToClipboard(message);
    }
  };

  const sendWhatsApp = () => {
    const message = generateWelcomeMessage();
    if (message) {
      const encodedMessage = encodeURIComponent(message);
      const phone = selectedApartment?.manager_phone?.replace(/\D/g, '') || '';
      const whatsappUrl = `https://wa.me/${phone}?text=${encodedMessage}`;
      window.open(whatsappUrl, '_blank');
    }
  };

  return (
    <div className="card p-6 max-w-4xl mx-auto">
      <h3 className="text-xl font-heading font-semibold mb-6">
        {booking ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'}
      </h3>

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ò–º—è –≥–æ—Å—Ç—è
            </label>
            <input
              type="text"
              name="guest_name"
              value={formData.guest_name}
              onChange={handleInputChange}
              className="input-morent"
              placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç
            </label>
            <select
              name="apartment_id"
              value={formData.apartment_id}
              onChange={handleInputChange}
              className="input-morent"
              required
            >
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç</option>
              {apartments.map((apartment) => (
                <option key={apartment.id} value={apartment.id}>
                  {apartment.title} (–∫–≤. {apartment.apartment_number})
                </option>
              ))}
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞
            </label>
            <input
              type="date"
              name="checkin_date"
              value={formData.checkin_date}
              onChange={handleInputChange}
              className="input-morent"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞
            </label>
            <input
              type="date"
              name="checkout_date"
              value={formData.checkout_date}
              onChange={handleInputChange}
              className="input-morent"
              required
            />
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ */}
        {selectedApartment && (
          <div className="bg-gray-50 p-4 rounded-lg">
            <h4 className="font-medium text-gray-900 mb-3">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ</h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <span className="font-medium">–ù–∞–∑–≤–∞–Ω–∏–µ:</span> {selectedApartment.title}
              </div>
              <div>
                <span className="font-medium">–ê–¥—Ä–µ—Å:</span> {selectedApartment.base_address}, –∫–æ—Ä–ø. {selectedApartment.building_number}, –∫–≤. {selectedApartment.apartment_number}
              </div>
              <div>
                <span className="font-medium">Wi-Fi:</span> {selectedApartment.wifi_name}
              </div>
              <div>
                <span className="font-medium">–ö–æ–¥ –ø–æ–¥—ä–µ–∑–¥–∞:</span> {selectedApartment.code_building}
              </div>
              <div>
                <span className="font-medium">–ö–æ–¥ –∑–∞–º–∫–∞:</span> {selectedApartment.code_lock}
              </div>
              <div>
                <span className="font-medium">–ú–µ–Ω–µ–¥–∂–µ—Ä:</span> {selectedApartment.manager_name}
              </div>
            </div>
            
            {/* –ü–æ–ª–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –∑–∞–º–∫–∞ */}
            <div className="mt-4 pt-4 border-t border-gray-200">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥ –∑–∞–º–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
              </label>
              <input
                type="text"
                value={customLockCode}
                onChange={(e) => setCustomLockCode(e.target.value)}
                className="input-morent"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥ –∑–∞–º–∫–∞"
              />
              <p className="text-xs text-gray-500 mt-1">
                –ï—Å–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∫–æ–¥ –∏–∑ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞
              </p>
            </div>
          </div>
        )}

        {/* –°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç—è */}
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <h4 className="font-medium text-gray-900">–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç—è</h4>
                         <button
               type="button"
               onClick={generateNewSlug}
               className="btn-secondary text-sm"
               disabled={isLoading}
             >
               {isBookingCreated ? '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É' : '–°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É'}
             </button>
          </div>

                     {formData.slug && (
             <div className="bg-blue-50 p-4 rounded-lg">
               <div className="flex items-center justify-between">
                 <div className="flex-1">
                   <p className="text-sm font-medium text-gray-700 mb-1">–°—Å—ã–ª–∫–∞ –¥–ª—è –≥–æ—Å—Ç—è:</p>
                   <p className="text-sm text-blue-600 break-all">{getGuestLink()}</p>
                   {isBookingCreated && (
                     <p className="text-xs text-green-600 mt-1">‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>
                   )}
                 </div>
                 <button
                   type="button"
                   onClick={() => copyToClipboard(getGuestLink())}
                   className="btn-primary ml-4 text-sm"
                   disabled={!isBookingCreated}
                 >
                   {isBookingCreated ? '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å' : '–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'}
                 </button>
               </div>
             </div>
           )}
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ—Å—Ç—è */}
        {formData.guest_name && formData.slug && (
          <div className="space-y-4">
            <h4 className="font-medium text-gray-900">–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ—Å—Ç—è</h4>
            
            <div className="bg-green-50 p-4 rounded-lg">
              <div className="mb-3">
                <p className="text-sm font-medium text-gray-700 mb-2">–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:</p>
                <div className="bg-white p-3 rounded border text-sm whitespace-pre-line">
                  {generateWelcomeMessage()}
                </div>
              </div>
              
              <div className="flex space-x-3">
                <button
                  type="button"
                  onClick={copyMessage}
                  className="btn-primary text-sm"
                  disabled={isLoading}
                >
                  üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                </button>
                
                <button
                  type="button"
                  onClick={sendWhatsApp}
                  className="btn-secondary text-sm"
                  disabled={isLoading}
                >
                  üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp
                </button>
              </div>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex justify-end space-x-4 pt-6 border-t border-gray-200">
          <button
            type="button"
            onClick={onCancel}
            className="btn-secondary"
            disabled={isLoading}
          >
            –û—Ç–º–µ–Ω–∞
          </button>
                     <button
             type="submit"
             className="btn-primary"
             disabled={isLoading}
           >
             {isLoading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : (booking ? '–û–±–Ω–æ–≤–∏—Ç—å' : (isBookingCreated ? '–û–±–Ω–æ–≤–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å'))}
           </button>
        </div>
      </form>
    </div>
  );
};

export default BookingForm;
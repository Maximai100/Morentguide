// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ Vercel
// –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Directus —á–µ—Ä–µ–∑ /api –ø—Ä–æ–∫—Å–∏

import { api } from './api';

export const testDirectusAPI = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Directus API...');
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º
    console.log('1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞–º...');
    const apartmentsResponse = await api.get('/items/apartments');
    console.log('‚úÖ –ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã:', apartmentsResponse.data.data?.length || 0, '–∑–∞–ø–∏—Å–µ–π');
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º
    console.log('2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º...');
    const bookingsResponse = await api.get('/items/bookings');
    console.log('‚úÖ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã:', bookingsResponse.data.data?.length || 0, '–∑–∞–ø–∏—Å–µ–π');
    
    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Ñ–∞–π–ª—ã
    console.log('3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª—ã...');
    const filesResponse = await api.get('/files');
    console.log('‚úÖ –§–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã:', filesResponse.data.data?.length || 0, '—Ñ–∞–π–ª–æ–≤');
    
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:', error);
    
    if (error && typeof error === 'object' && 'response' in error) {
      const axiosError = error as { response?: { status: number; data: unknown } };
      console.error('–°—Ç–∞—Ç—É—Å:', axiosError.response?.status);
      console.error('–î–∞–Ω–Ω—ã–µ:', axiosError.response?.data);
    }
    
    return false;
  }
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤ development —Ä–µ–∂–∏–º–µ
if (import.meta.env.DEV) {
  testDirectusAPI().then(success => {
    if (success) {
      console.log('üöÄ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ');
    }
  });
}